1. Usage of inhertance in code will allow code to be reused For example, lets say we have a program that deals with trucks, cars, buses, and motorcycle. Each of these vehicles are slightly different but they overall have the same underlying base structure. For example, they will all have wheels, they will all use gas, and they all have seats. Rather than creating a seperate class for each one we can collect the common features into one parent class. If we have a parent vehicle class, which the children (cars, buses, etc) inherit, we can add all the common features to the parent vehicle class. This allows for reuse of code, making the code cleaner and understandable.
2. Through inhertance, one can represent parent child relationships in code accurately. Inhertance is very important in object oriented programming because how it allows there to be a hirearchal structure built. Through inhertance we can overide methods, and also make use of polymorphism. For example, we might have a common method in the parent class, but we can modify the method in the child class to have a more child specific behavior. For example, in the previous problem, we had a parent base class with the shape method. However, square and circle child classes would have the same method but different functionality based on how it is implemented in the child class. We can call the shape method on both objects because of inhertance which is why inhertance is very useful. Inhertance as mentioned can help organize different classes that help reflect real life systems which we often need to do.
