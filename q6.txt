1. The change inside incerement_int_a does not change the variable a after the function call.
2. The change inside increment_int_b does change the variable b after the function call.
3. The reason why that inrenent_int_a does not change while increment_int_b does change is that integers are immutable in python whereas lists are not. When you pass immutable objects in python, it is passed as a copy into the function rather than the actual variable refrence. However, for increment_int_b, we are passing a mutuable list. Lists are not primitive data types which is why it is mutuable. Thus, when it passed into the increment_int_a, you are actually passing a refrence of the actual object which allows it to be modfied in the function. This is why we get two different answers for the two functions. 
